
#user http;

worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    add_header Server "WL" always;

    # GZIP
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss;

    # Cache 
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off; # зона кеширования
    proxy_cache_key "$scheme$host$request_uri"; # ключ кеширования

    upstream api_v1 {
        server app_spa:8000 weight=2;
        server app_spa_2:8000 weight=1;
        server app_spa_3:8000 weight=1;
    }

    server {
        listen 80;

        location /api/v1/ {
            proxy_pass http://api_v1/;
            #proxy_pass http://app_spa:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr; # реальный IP клиента
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # для хранения цепочки прокси
        }

        location /api/v1/no_balance/ {
            proxy_pass http://app_spa:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr; # реальный IP клиента
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # для хранения цепочки прокси
        }

        location /mirror1/api/v1/ {
            #rewrite ^/mirror1/(.*)$ /$1 break; # префикс mirror1
            proxy_pass http://app_spa_mirror:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location = /api/v1 {
            return 301 /api/v1/swagger/index.html;
        }

        # location /static/ {
        #     root /usr/share/nginx/static_mpa;
        # }

        location /legacy/ {
            proxy_pass http://app_mpa:8000/;
        }

        # location ~ ^/(?!legacy)(.+)$ {
        #     set $path $1;
        #     return 302 /legacy/$path;
        # }

        # location ~ /legacy/^(.*)$ {
        #     set $path $1;
        #     proxy_pass http://app_mpa:8000/$path;
        # }

        location = /documentation {
            alias /Readme.md;
            default_type md;
            add_header Content-Disposition "attachment; filename=Readme.md";
        }   

        location / {
            root /usr/share/nginx/static;
            index index.html;
        }

        location = /test {
            return 301 http://$host/;
        }

        location /admin/ {
            proxy_set_header X-Script-Name /admin;
            proxy_set_header Host $host;
            proxy_pass http://pgadmin:80/;
            proxy_redirect http:// $scheme://;
        }

        location = /status {
            stub_status;
        }

    }
}
